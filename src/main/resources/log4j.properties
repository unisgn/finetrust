#### Define ROOT CATEGORY and its LEVEL and APPENDER
log4j.rootCategory=INFO, stdout


######### Define Appender
log4j.appender.stdout=org.apache.log4j.ConsoleAppender

log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# %c 输出日志信息所属的类的全名
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18 22：10：28
# %f 输出日志信息所属的类的类名
# %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行, 等效于 %C.%M(%F:%L)
# %m 输出代码中指定的信息，如info(message)中的message
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自应用启动到输出该日志信息所耗费的毫秒数
# %t 输出产生该日志事件的线程名, useful when debug multi-thread application
log4j.appender.stdout.layout.ConversionPattern=[%-5p] [%t] (%c) - %m%n


log4j.appender.R=org.apache.log4j.DailyRollingFileAppender

#log4j.appender.R.File=${webAPP.root}/WEB-INF/logs/log4j.log
log4j.appender.R.File=${user.home}/logs/log4j

log4j.appender.R.layout=org.apache.log4j.PatternLayout

log4j.appender.R.DatePattern  ='_'yyyy-MM-dd'.log'

log4j.appender.R.layout.ConversionPattern=[%5p] [Lively] %d [%t] (%c) - %m%n



##### Define customized CATEGORY (alone with its LEVEL and APPENDER)
log4j.logger.org.springframework=DEBUG
log4j.logger.org.hibernate=DEBUG
log4j.logger.org.hibernate.ps.PreparedStatementCache=WARN

log4j.logger.com.lively=DEBUG