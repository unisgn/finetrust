<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:ctx="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc     http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		                   http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		                   http://www.springframework.org/schema/util    http://www.springframework.org/schema/util/spring-util-4.1.xsd
		                   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

  <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射  -->

  <mvc:resources mapping="/beaux/**" location="/beaux/"  />
  <mvc:resources mapping="/extjs5/**" location="/extjs5/" />
  <!--<mvc:resources mapping="/express/**" location="/express/" />-->


  <!-- handle annotations  on Method, e.g. @RequestMapping -->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <property name="messageConverters">
      <util:list id="beanList">
        <ref bean="stringHttpMessageConverter"/>
        <ref bean="jsonHttpMessageConverter"/>
      </util:list>
    </property>
  </bean>

  <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" >
    <property name="supportedMediaTypes">
      <list>
        <value>text/html;charset=UTF-8</value>
        <value>text/plain;charset=UTF-8</value>
      </list>
    </property>
  </bean>

  <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
          p:supportedMediaTypes="application/json"
          p:objectMapper-ref="objectMapperFactory"/>

  <mvc:annotation-driven content-negotiation-manager="contentMgr"/>
  <ctx:component-scan base-package="com.finetrust.web" />

  <bean id="contentMgr" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
          p:favorPathExtension="true"
          p:ignoreAcceptHeader="true"
          p:defaultContentType="text/html"
          p:useJaf="false">
    <property name="mediaTypes">
      <value>
        json=application/json
      </value>
    </property>
  </bean>

  <bean id="objectMapperFactory" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"
        p:failOnEmptyBeans="false">

    <property name="featuresToEnable">
      <array>
        <util:constant static-field="com.fasterxml.jackson.databind.DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT"/>
      </array>
    </property>
    <property name="featuresToDisable">
      <array>
        <util:constant static-field="com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES"/>
      </array>
    </property>
  </bean>



  <!-- handle  annotations  on Class, e.g. @RequestMapping -->
  <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" >-->
    <!-- list of interceptors, intercept by order
    <property name="interceptors">

        <list>



        </list>
    </property>
    -->
  <!--</bean>-->

  <!--
       <mvc:interceptors>
       <bean name="openSessionInViewInterceptor"
         class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor" >
       <property name="sessionFactory"> <ref bean="sessionFactory"/></property>
       </bean>
       <bean class="com.core.mvc.MyInteceptor" />
       </mvc:interceptors>
  -->

  <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
  <!--prefix JSP前缀，一般为文件夹-->
  <!--suffix JSP前缀，一般为.jsp-->
  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
        p:prefix="/WEB-INF/jsp/" p:suffix=".jsp"/>

  <!-- 配置common upload-->
  <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"-->
       <!--p:defaultEncoding="UTF-8" p:maxUploadSize="10*1024*1024"/>-->


</beans>
